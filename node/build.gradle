
apply from: 'https://raw.github.com/evgeny-goldin/scripts/master/src/main/gradle/wrapper.gradle'

buildscript {

    final version = project.hasProperty( 'pluginsVersion' ) ? project.pluginsVersion : '0.2.1-SNAPSHOT'
    println "> Running Node.js plugin version [$version]"

    repositories { mavenLocal(); maven { url 'http://evgenyg.artifactoryonline.com/evgenyg/repo/' }}
    dependencies { classpath "com.github.goldin.plugins.gradle:node:$version" }
}

defaultTasks 'clean', 'cleanModules', 'start', 'restartall', 'stop', 'stopall'


int portNumberForProject( Project p ){ 3000 + ( Math.abs( p.name.hashCode()) % 100 ) }


subprojects {
    Project p ->

    apply plugin: 'node'

    clean.doFirst {
        if ( System.getProperty( 'cleanNode' ) != null )
        {
            final deleteFiles = [ new File( System.getProperty( 'user.home' ), '.npm' ),
                                  new File( System.getProperty( 'user.home' ), '.nvm' ) ]

            println "Deleting $deleteFiles"
            project.delete( deleteFiles )
        }
    }

    node {
        nodeVersion            = 'latest'
        cleanWorkspace         = true
        printConfigs           = true
        cleanWorkspaceCommands = [ 'git checkout -f config' ]
        checkContent           = p.name + (( p.name == 'hello-js'                     ) ? '|yhn|890|' :
                                           ( p.name == 'hello-js-port-number'         ) ? '|undefined|undefined|' :
                                           ( p.name == 'hello-coffee-port-number'     ) ? '|zaq|123|' :
                                           ( p.name == 'hello-js-configs-new-keys'    ) ? '|OLM|457|false|false' :
                                           ( p.name == 'hello-js-configs-update-keys' ) ? '|IMN|784|true|true' :
                                                                                          '' )
        pidOnlyToStop   = false
        portNumber      = portNumberForProject( p )
        scriptArguments = "--port $portNumber"
        configs         = [[ 'config/development.json' : file( "${ project.name }.json" ) ],
                           [ 'config/development.json' : [ port : portNumber ]]]
    }

    setup << {
        /**
         * Comparing all configs generated with '*-merged.json' files expected.
         */
        final configFiles = new File( p.projectDir, 'config' ).listFiles().findAll{ File f -> f.name.endsWith( '.json' ) }
        for ( File configFile in configFiles )
        {
            final mergedFiled = new File( configFile.parentFile, configFile.name[ 0 .. -6 ] + '-merged.json' )
            if ( mergedFiled.file )
            {
                assert ( configFile.text == mergedFiled.text ), "[$configFile.canonicalPath] != [$mergedFiled.canonicalPath]"
                println "[$configFile.canonicalPath] = [$mergedFiled.canonicalPath]"
            }
        }
    }
}


project ( ':hello-js'                 ) { node { configsNewKeys = 'fail'   }}
project ( ':hello-js-port-number'     ) { node { configsNewKeys = 'ignore' }}
project ( ':hello-coffee-port-number' ) { node { configsNewKeys = 'create' }}


project ( ':hello-js-configs-new-keys'    ) {
    Project p ->

    node {
        configsNewKeys = 'create'
        configs        = [[ 'config/development.json'   : file( "${ project.name }.json" ) ],
                          [ 'config/development.json'   : [ port : portNumber ]],
                          [ 'config/development.json'   : file( "${ project.name }-2.json" ) ],
                          [ 'config/development-2.json' : file( "${ project.name }.properties" ) ]]
    }
}

project ( ':hello-js-configs-update-keys' ) {
    Project p ->

    node {
        configsNewKeys = 'fail'
        configs        = [[ 'config/development.json'   : file( "${ project.name }.json" ) ],
                          [ 'config/development.json'   : [ port : portNumber ]],
                          [ 'config/development-2.json' : file( "${ project.name }.properties" ) ],
                          [ 'config/development-3.json' : file( "${ project.name }-3.json" ) ],
                          [ 'config/development-4.json' : file( "${ project.name }-4.json" ) ],
                          [ 'config/development-5.json' : file( "${ project.name }-5.json" ) ],
                          [ 'config/development-6.json' : file( "${ project.name }-6.json" ) ],
                          [ 'config/development-7.json' : file( "${ project.name }-7.json" ) ],

        ]
    }
}
